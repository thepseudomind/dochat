{"id":"../node_modules/react-scroll-to-bottom/lib/debounce.js","dependencies":[{"name":"/Users/kenny/dochat/package.json","includedInParent":true,"mtime":1585906457517},{"name":"/Users/kenny/dochat/.babelrc","includedInParent":true,"mtime":1585328780539},{"name":"/Users/kenny/dochat/node_modules/react-scroll-to-bottom/package.json","includedInParent":true,"mtime":1585907404977}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _default(fn, ms) {\n  if (!ms) {\n    return fn;\n  }\n\n  var last = 0;\n  var timeout = null;\n  return function () {\n    var _arguments = arguments;\n    var now = Date.now();\n\n    if (now - last > ms) {\n      fn.apply(null, arguments);\n      last = now;\n    } else {\n      clearTimeout(timeout);\n      timeout = setTimeout(function () {\n        fn.apply(null, _arguments);\n        last = Date.now();\n      }, Math.max(0, ms - now + last));\n    }\n  };\n}\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/debounce.js"],"names":["fn","ms","last","timeout","now","Date","apply","arguments","clearTimeout","setTimeout","Math","max"],"mappings":";;;;;;;AAAe,kBAAUA,EAAV,EAAcC,EAAd,EAAkB;AAC/B,MAAI,CAACA,EAAL,EAAS;AACP,WAAOD,EAAP;AACD;;AAED,MAAIE,IAAI,GAAG,CAAX;AACA,MAAIC,OAAO,GAAG,IAAd;AAEA,SAAO,YAAY;AAAA;AACjB,QAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;;AAEA,QAAIA,GAAG,GAAGF,IAAN,GAAaD,EAAjB,EAAqB;AACnBD,MAAAA,EAAE,CAACM,KAAH,CAAS,IAAT,EAAeC,SAAf;AACAL,MAAAA,IAAI,GAAGE,GAAP;AACD,KAHD,MAGO;AACLI,MAAAA,YAAY,CAACL,OAAD,CAAZ;AAEAA,MAAAA,OAAO,GAAGM,UAAU,CAAC,YAAM;AACzBT,QAAAA,EAAE,CAACM,KAAH,CAAS,IAAT,EAAeC,UAAf;AACAL,QAAAA,IAAI,GAAGG,IAAI,CAACD,GAAL,EAAP;AACD,OAHmB,EAGjBM,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYV,EAAE,GAAGG,GAAL,GAAWF,IAAvB,CAHiB,CAApB;AAID;AACF,GAdD;AAeD","sourcesContent":["export default function (fn, ms) {\n  if (!ms) {\n    return fn;\n  }\n\n  let last = 0;\n  let timeout = null;\n\n  return function () {\n    const now = Date.now();\n\n    if (now - last > ms) {\n      fn.apply(null, arguments);\n      last = now;\n    } else {\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        fn.apply(null, arguments);\n        last = Date.now();\n      }, Math.max(0, ms - now + last));\n    }\n  };\n}\n"]}},"error":null,"hash":"e2701d218310f0674b272a5c4f9aac6a","cacheData":{"env":{}}}